% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimation_main.R
\name{polygram}
\alias{polygram}
\title{Estimates a polygram with supplied data, m, p and split points. Several
hard constraints are supported. The interface is prone to changes.}
\usage{
polygram(data, s = floor(length(data)^(1/3)), support = NULL, m = NULL,
  p = NULL, d = NULL, M = 1, symmetric = FALSE, monotone = NULL,
  shape = NULL, moment_conditions = NULL, unimodal = FALSE,
  lower_boundary = NULL, quantile_conditions = NULL, lambdas = NULL,
  upper_boundary = NULL, nu = NULL, k = NULL, verbose = 0,
  method = "mosek")
}
\arguments{
\item{data}{The data. Can be \code{NULL} if a density \code{d} is supplied.}

\item{s}{The vector of split points. If a natural number \code{K}, \code{s} is chosen as
\code{(1:K)/(K+1)}. Defaults to \code{length(data)^(1/3)}. If \code{0} or \code{NULL}, Bernstein
density is computed.}

\item{support}{A vector \code{c(l, u)} specifying the support of the density. Defaults to \code{c(0, 1)}.}

\item{m}{The order of the Bernstein polynomial. Defaults to 3.}

\item{p}{Connectedness order. Defaults to \code{m-1}.}

\item{d}{Optional distribution function. Can be the base function in a
Dirichlet process if used in conjunction with M. Defaults to NULL.}

\item{M}{The concentration parameter in a Dirichlet process. Defaults to 1. Ignored
if either \code{d} or \code{data} is \code{NULL}.}

\item{symmetric}{Hard symmetry constraint. Requires that s is symmetric as well.}

\item{monotone}{Hard monotonicity constraint. Can be \code{"increasing"},
\code{"decreasing"} or \code{NULL}.}

\item{shape}{Hard convexity / concavity constraint. Can be \code{"convex"},
\code{"concave"} or \code{NULL}.}

\item{moment_conditions}{A list of moment conditons. The argument "moment" tells
which moment is being constrained, while a and be give upper and lower bounds.
If only one a or b is given, it is assumed that a = b and the condition is
constant.}

\item{unimodal}{Hard unimodality constraint.}

\item{lower_boundary}{Hard lower boundary constraint. Defualts to NULL.}

\item{quantile_conditions}{A list of quantile conditions. List of "quantile", i and j specifing
the indices of the splits for where the quantile is.}

\item{lambdas}{A vector of lambdas. The first element is lambda1, second lambda2, etc.}

\item{upper_boundary}{Hard upper boundary constraint. Defualts to NULL.}

\item{nu, k}{Specific unimodality constraints.}

\item{verbose}{An integer between 0 and 10. Modifies Rmoseks verbose command.}

\item{method}{Optimisation method. "quadprog" (default) and "mosek" supported. Note that mosek requires
a license.}
}
\value{
A polygram object.
}
\description{
Estimates a polygram with supplied data, m, p and split points. Several
hard constraints are supported. The interface is prone to changes.
}

